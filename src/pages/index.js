import Head from "next/head";
import NavBar from "@/components/NavBar";
import AlbumList from "@/components/AlbumList";
import MusicPlayer from "@/components/MusicPlayer";

import { Noto_Sans_JP } from "next/font/google";
import styles from "@/styles/Home.module.css";

import { useEffect, useState } from "react";

const notoSansJP = Noto_Sans_JP({
  subsets: ["latin"],
  weight: ["100", "400", "700", "900"],
  display: "swap",
});

export default function Home() {
  const [albums, setAlbums] = useState([]);
  const [songs, setSongs] = useState([]);
  const [albumsStatusMessage, setAlbumsStatusMessage] =
    useState("Loading albums...");
  const [songsStatusMessage, setSongsStatusMessage] =
    useState("Loading songs...");

  const fetchSongs = async (albumId) => {
    try {
      const response = await fetch(`/api/songs?albumId=${albumId}`);
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      const fetchedSongs = await response.json();

      if (fetchedSongs.length > 0) {
        setSongs(fetchedSongs);
      } else {
        setSongsStatusMessage("No songs found.");
      }
    } catch (error) {
      console.error("Failed to fetch songs:", error);
      setSongsStatusMessage("Error loading songs. Is the backend running?");
    }
  };

  useEffect(() => {
    const fetchAlbums = async () => {
      try {
        const response = await fetch("/api/albums");
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        const fetchedAlbums = await response.json();
        if (fetchedAlbums.length > 0) {
          setAlbums(fetchedAlbums);
        } else {
          setAlbumsStatusMessage("No albums found.");
        }
      } catch (error) {
        console.error("Failed to fetch albums:", error);
        setAlbumsStatusMessage("Error loading albums. Is the backend running?");
      }
    };
    fetchAlbums();
  }, []);

  return (
    <>
      <Head>
        <title>Music Streamer</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={`${styles.page} ${notoSansJP.className}`}>
        <NavBar />
        <main className={styles.main}>
          <AlbumList
            albums={albums}
            albumsStatusMessage={albumsStatusMessage}
            doFetchSongs={fetchSongs}
          />
        </main>

        <footer className={styles.footer}>
          <MusicPlayer songs={songs} songsStatusMessage={songsStatusMessage} />
        </footer>
      </div>
    </>
  );
}
